[{"/Users/pramodthomas/seidc/projects/MentalHealth/client/src/index.js":"1","/Users/pramodthomas/seidc/projects/MentalHealth/client/src/components/App.js":"2","/Users/pramodthomas/seidc/projects/MentalHealth/client/src/components/forms/TextInput.js":"3","/Users/pramodthomas/seidc/projects/MentalHealth/client/src/components/Auth/Login.js":"4","/Users/pramodthomas/seidc/projects/MentalHealth/client/src/components/forms/Button.js":"5","/Users/pramodthomas/seidc/projects/MentalHealth/client/src/components/Auth/Signup.js":"6","/Users/pramodthomas/seidc/projects/MentalHealth/client/src/components/Onboarding/index.js":"7","/Users/pramodthomas/seidc/projects/MentalHealth/client/src/data/survey.js":"8","/Users/pramodthomas/seidc/projects/MentalHealth/client/src/components/forms/Radio.js":"9","/Users/pramodthomas/seidc/projects/MentalHealth/client/src/components/Dashboard/index.js":"10","/Users/pramodthomas/seidc/projects/MentalHealth/client/src/components/Survey/index.js":"11","/Users/pramodthomas/seidc/projects/MentalHealth/client/src/data/wellnessSurvey.js":"12"},{"size":239,"mtime":1608136942202,"results":"13","hashOfConfig":"14"},{"size":977,"mtime":1608308258032,"results":"15","hashOfConfig":"14"},{"size":473,"mtime":1608150246245,"results":"16","hashOfConfig":"14"},{"size":2035,"mtime":1608309932101,"results":"17","hashOfConfig":"14"},{"size":543,"mtime":1608307414815,"results":"18","hashOfConfig":"14"},{"size":2454,"mtime":1608319002793,"results":"19","hashOfConfig":"14"},{"size":4910,"mtime":1608305815359,"results":"20","hashOfConfig":"14"},{"size":28749,"mtime":1608310278428,"results":"21","hashOfConfig":"14"},{"size":373,"mtime":1608226490391,"results":"22","hashOfConfig":"14"},{"size":1160,"mtime":1608307961730,"results":"23","hashOfConfig":"14"},{"size":3666,"mtime":1608310503055,"results":"24","hashOfConfig":"14"},{"size":5500,"mtime":1608308464548,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"td3gaq",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/pramodthomas/seidc/projects/MentalHealth/client/src/index.js",[],["52","53"],"/Users/pramodthomas/seidc/projects/MentalHealth/client/src/components/App.js",[],"/Users/pramodthomas/seidc/projects/MentalHealth/client/src/components/forms/TextInput.js",[],"/Users/pramodthomas/seidc/projects/MentalHealth/client/src/components/Auth/Login.js",[],"/Users/pramodthomas/seidc/projects/MentalHealth/client/src/components/forms/Button.js",[],"/Users/pramodthomas/seidc/projects/MentalHealth/client/src/components/Auth/Signup.js",[],"/Users/pramodthomas/seidc/projects/MentalHealth/client/src/components/Onboarding/index.js",["54","55"],"import React from 'react';\nimport survey from \"../../data/survey\"\nimport Radio from \"../forms/Radio\";\nimport Button from \"../forms/Button\";\n\n\n\nexport default class Onboarding extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            answers: survey.map(i => \"\"),\n            current: 0,\n            question: survey[0],\n            showResults: false\n        }\n    }\n\n    updateAnswer(e){\n        console.log(e.target.value);\n        if (!e.target.checked) return;\n\n        const answers = Array.from(this.state.answers)\n        answers[this.state.current] = e.target.value;\n        this.setState({answers})\n\n    }\n    completeSurvey(){\n        this.setState({ showResults: true });\n    }\n    changeQuestion(x){\n        if (this.state.current == survey.length-1 && x > 0){\n            return this.completeSurvey()\n        }\n        const current = this.state.current + x;\n        const question = survey[current]\n        this.setState({current, question})\n\n    }\n\n    renderQuestion(){\n        if (this.state.question.type === \"multiple-choice\"){\n\n            return (\n                <div className=\"onboarding__question-choices\">{this.state.question.choices.map(choice => (\n                    <Radio value={choice.key} num={this.state.current} key={choice.key +this.state.current} onChange={e => this.updateAnswer(e)} >{choice.text}</Radio>\n\n                ))}</div>\n            )\n        }\n        else {\n            return(\n                <div className=\"onboarding__question-choices\">\n                    <Radio value=\"yes\" num={this.state.current} onChange={e => this.updateAnswer(e)} >Yes</Radio>\n                    <Radio value=\"no\" num={this.state.current} onChange={e => this.updateAnswer(e)} >No</Radio>\n                </div>\n            )\n        }\n    }\n\n    renderQuestionData(question, index) {\n\n        if (question.type === 'yes-no') return (\n            <div className=\"onboarding__data\">\n                <p className=\"onboarding__answered\">{question.data.answered} of 352 responses.</p>\n                <div className={`onboarding__data-option${this.state.answers[index].toLowerCase() === 'yes' ? ' picked' : ''}`}>\n                    <span style={{width: `${question.data.breakdown.yes}%`}}></span>\n                    <h4>Yes: {question.data.breakdown.yes}%</h4>\n                </div>\n                <div className={`onboarding__data-option${this.state.answers[index].toLowerCase() === 'no' ? ' picked' : ''}`}>\n                    <span style={{width: `${question.data.breakdown.no}%`}}></span>\n                    <h4>No: {question.data.breakdown.no}%</h4>\n                </div>\n            </div>\n        );\n\n        else return (\n            <div className=\"onboarding__data\">\n                <p className=\"onboarding__answered\">{question.data.answered} of 352 responses.</p>\n                {question.choices.map(choice => (\n                    <div className={`onboarding__data-option${this.state.answers[index].toLowerCase() === choice.key.toLowerCase() ? ' picked' : ''}`} key={choice.key}>\n                        <span style={{width: `${question.data.breakdown[choice.key]}%`}}></span>\n                        <h4>{choice.text}: {question.data.breakdown[choice.key]}%</h4>\n                    </div>\n                ))}\n\n            </div>\n        )\n\n\n    }\n\n    renderResults() {\n\n        return (\n            <section className=\"onboarding\">\n                <div className=\"onboarding__container\">\n                    {survey.map((q, i) => (\n                        <div className=\"onboarding__question\" key={i}>\n                            <h3 className=\"onboarding__question-title\">{q.question}</h3>\n                            {this.renderQuestionData(q, i)}\n                        </div>\n                    ))}\n                    <div className=\"onboarding__conclusion\">\n                        <Button path=\"/dashboard\">Finished</Button>\n                    </div>\n                </div>\n            </section>\n        )\n\n    }\n\n    render(){\n        if (this.state.showResults) return this.renderResults();\n        return(\n            <section className=\"onboarding\">\n                <div className=\"onboarding__container\">\n                    <div className=\"onboarding__question\">\n                        <h3 className=\"onboarding__question-title\">{this.state.question.question}</h3>\n                        {this.renderQuestion()}\n                        <div className=\"onboarding__buttons\">\n                            {this.state.current ? <Button type=\"button\" onClick={() => this.changeQuestion(-1)}>Previous</Button>: \"\"}\n                            <Button type=\"button\" onClick={() => this.changeQuestion(1) }>{this.state.current == survey.length-1 ? \"Submit\": \"Next\"}</Button>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n","/Users/pramodthomas/seidc/projects/MentalHealth/client/src/data/survey.js",["56"],"/Users/pramodthomas/seidc/projects/MentalHealth/client/src/components/forms/Radio.js",[],"/Users/pramodthomas/seidc/projects/MentalHealth/client/src/components/Dashboard/index.js",[],"/Users/pramodthomas/seidc/projects/MentalHealth/client/src/components/Survey/index.js",["57","58"],"/Users/pramodthomas/seidc/projects/MentalHealth/client/src/data/wellnessSurvey.js",["59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":32,"column":32,"nodeType":"66","messageId":"67","endLine":32,"endColumn":34},{"ruleId":"64","severity":1,"message":"65","line":123,"column":111,"nodeType":"66","messageId":"67","endLine":123,"endColumn":113},{"ruleId":"68","severity":1,"message":"69","line":765,"column":7,"nodeType":"70","messageId":"71","endLine":765,"endColumn":10},{"ruleId":"64","severity":1,"message":"65","line":35,"column":32,"nodeType":"66","messageId":"67","endLine":35,"endColumn":34},{"ruleId":"64","severity":1,"message":"65","line":97,"column":138,"nodeType":"66","messageId":"67","endLine":97,"endColumn":140},{"ruleId":"72","severity":1,"message":"73","line":1,"column":1,"nodeType":"74","endLine":195,"endColumn":2},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'min' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]